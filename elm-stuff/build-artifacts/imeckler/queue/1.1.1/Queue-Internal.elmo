Elm.Queue = Elm.Queue || {};
Elm.Queue.Internal = Elm.Queue.Internal || {};
Elm.Queue.Internal.make = function (_elm) {
   "use strict";
   _elm.Queue = _elm.Queue || {};
   _elm.Queue.Internal = _elm.Queue.Internal || {};
   if (_elm.Queue.Internal.values)
   return _elm.Queue.Internal.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Queue.Internal",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var Queue = F2(function (a,b) {
      return {ctor: "Queue"
             ,_0: a
             ,_1: b};
   });
   _elm.Queue.Internal.values = {_op: _op
                                ,Queue: Queue};
   return _elm.Queue.Internal.values;
};